# LottoPro-AI Nginx 설정 파일
# 고성능 웹 서버 및 리버스 프록시 설정

# 워커 프로세스 수 (CPU 코어 수에 맞춰 설정)
worker_processes auto;

# PID 파일 위치
pid /var/run/nginx.pid;

# 워커 연결 설정
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # 기본 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로그 형식
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # 액세스 로그
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # 클라이언트 설정
    client_max_body_size 16M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # 타임아웃 설정
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=predict:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;
    
    # 업스트림 서버 (LottoPro-AI 앱)
    upstream lottopro_app {
        server web:5000 max_fails=3 fail_timeout=30s;
        # 로드밸런싱이 필요한 경우 추가 서버 설정
        # server web2:5000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # Redis 업스트림 (관리자 접근용)
    upstream redis_insight {
        server redis-insight:8001;
    }
    
    # 메인 서버 블록
    server {
        listen 80;
        server_name lottopro-ai-v2-0.onrender.com localhost;
        
        # 보안 설정
        server_tokens off;
        
        # 정적 파일 서빙
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # 정적 파일 압축
            gzip_static on;
            
            # CORS for static files
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
        }
        
        # Favicon
        location = /favicon.ico {
            alias /usr/share/nginx/html/static/images/favicon.ico;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # robots.txt
        location = /robots.txt {
            alias /usr/share/nginx/html/static/robots.txt;
            expires 1d;
        }
        
        # API 엔드포인트 (Rate Limiting 적용)
        location /api/predict {
            limit_req zone=predict burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://lottopro_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 타임아웃 설정 (예측은 시간이 오래 걸릴 수 있음)
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 캐시 설정 (예측 결과는 캐시하지 않음)
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://lottopro_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 일반 API 타임아웃
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            # API 응답 캐시 (짧은 시간)
            proxy_cache_valid 200 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # 관리자 페이지 (IP 제한)
        location /admin/ {
            # 관리자 IP만 접근 허용 (실제 IP로 변경 필요)
            # allow 192.168.1.0/24;
            # allow 10.0.0.0/8;
            # deny all;
            
            limit_req zone=general burst=5 nodelay;
            
            proxy_pass http://lottopro_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 관리자 페이지 타임아웃
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 캐시하지 않음
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # Redis Insight (개발 환경에서만)
        location /redis-insight/ {
            # 개발환경에서만 활성화
            # allow 127.0.0.1;
            # deny all;
            
            rewrite ^/redis-insight/(.*) /$1 break;
            proxy_pass http://redis_insight;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 메인 애플리케이션
        location / {
            limit_req zone=general burst=15 nodelay;
            
            proxy_pass http://lottopro_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 기본 타임아웃
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            # HTML 페이지 캐시 (짧은 시간)
            location ~* \.(html|htm)$ {
                expires 5m;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # 헬스체크 엔드포인트 (로드밸런서용)
        location /health {
            access_log off;
            proxy_pass http://lottopro_app/api/health;
            proxy_set_header Host $http_host;
            
            # 빠른 타임아웃
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
        }
        
        # 보안: 숨겨진 파일 접근 차단
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 불필요한 파일 접근 차단
        location ~* \.(log|conf|sql|bak|backup|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 에러 페이지
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
    }
    
    # HTTPS 서버 블록 (SSL 인증서 있을 때)
    server {
        listen 443 ssl http2;
        server_name lottopro-ai-v2-0.onrender.com;
        
        # SSL 설정
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL 최적화
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;
        
        # 나머지 설정은 HTTP 블록과 동일
        include /etc/nginx/sites-available/lottopro-common.conf;
    }
    
    # HTTP to HTTPS 리다이렉트
    server {
        listen 80;
        server_name lottopro-ai-v2-0.onrender.com;
        return 301 https://$server_name$request_uri;
    }
    
    # 캐시 설정
    proxy_cache_path /var/cache/nginx/lottopro levels=1:2 keys_zone=lottopro_cache:10m max_size=100m inactive=60m use_temp_path=off;
    
    # 모니터링 서버 (내부용)
    server {
        listen 8080;
        server_name localhost;
        
        # Nginx 상태
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # 프록시 상태
        location /proxy_status {
            proxy_pass http://lottopro_app/api/health;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
}

# 스트림 블록 (TCP/UDP 프록시용, 필요시)
stream {
    # Redis 프록시 (보안이 필요한 경우)
    upstream redis_backend {
        server redis:6379;
    }
    
    server {
        listen 16379;
        proxy_pass redis_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        
        # Redis 접근 제한
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}

# 설정 최적화 팁:
# 1. worker_processes는 CPU 코어 수로 설정
# 2. worker_connections는 시스템 한계에 맞춰 조정
# 3. 캐시 크기는 사용 가능한 메모리에 따라 조정
# 4. SSL 인증서 경로를 실제 경로로 변경
# 5. server_name을 실제 도메인으로 변경
# 6. IP 제한을 실제 환경에 맞게 설정

# 성능 모니터링:
# - /nginx_status로 Nginx 상태 확인
# - 로그 파일로 성능 분석
# - upstream 응답 시간 모니터링

# 보안 체크리스트:
# - SSL/TLS 설정 확인
# - Rate limiting 적절히 설정
# - IP 기반 접근 제어
# - 숨겨진 파일 접근 차단
# - 보안 헤더 적용

# 유지보수:
# - 로그 로테이션 설정
# - 캐시 디렉토리 정리
# - SSL 인증서 갱신
# - 설정 파일 백업
