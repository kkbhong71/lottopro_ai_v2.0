# LottoPro-AI Redis 설정 파일
# Redis 7.2 기준 최적화된 설정

# =======================
# 네트워크 설정
# =======================
# 모든 인터페이스에서 연결 허용 (Docker 환경용)
bind 0.0.0.0

# 기본 포트
port 6379

# 클라이언트 연결 제한시간 (초, 0=무제한)
timeout 300

# TCP keepalive 활성화 (초)
tcp-keepalive 60

# TCP 백로그 큐 크기
tcp-backlog 1024

# =======================
# 메모리 설정
# =======================
# 최대 메모리 사용량 (Docker 컨테이너 기준)
maxmemory 256mb

# 메모리 부족 시 정책 (LRU: 가장 오래된 키 제거)
maxmemory-policy allkeys-lru

# 메모리 샘플링 크기 (LRU 정확도 향상)
maxmemory-samples 5

# =======================
# 영속성 설정 (AOF)
# =======================
# AOF 활성화 (Append Only File)
appendonly yes

# AOF 파일명
appendfilename "appendonly.aof"

# AOF 동기화 정책 (매초마다 디스크에 쓰기)
appendfsync everysec

# 리라이트 중에는 fsync 지연 방지
no-appendfsync-on-rewrite no

# AOF 리라이트 트리거 조건
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# =======================
# 영속성 설정 (RDB) - 비활성화
# =======================
# RDB 스냅샷 비활성화 (AOF 사용으로 충분)
save ""

# 백그라운드 저장 실패 시 쓰기 중단하지 않음
stop-writes-on-bgsave-error no

# RDB 파일 압축
rdbcompression yes

# RDB 파일 체크섬
rdbchecksum yes

# =======================
# 로그 설정
# =======================
# 로그 레벨 (debug, verbose, notice, warning)
loglevel notice

# 로그 파일 (빈 문자열 = stdout)
logfile ""

# =======================
# 클라이언트 설정
# =======================
# 최대 동시 클라이언트 연결 수
maxclients 100

# 클라이언트 출력 버퍼 제한
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =======================
# 성능 최적화
# =======================
# Hash 타입 최적화
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List 타입 최적화
list-max-ziplist-size -2
list-compress-depth 0

# Set 타입 최적화
set-max-intset-entries 512

# Sorted Set 타입 최적화
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog 최적화
hll-sparse-max-bytes 3000

# =======================
# 보안 설정
# =======================
# 위험한 명령어 비활성화
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command DEBUG ""
rename-command CONFIG LOTTOPRO_CONFIG
rename-command SHUTDOWN LOTTOPRO_SHUTDOWN

# 보호 모드 (프로덕션에서는 비활성화)
protected-mode no

# =======================
# 슬로우 로그 설정
# =======================
# 슬로우 쿼리 기준 시간 (마이크로초)
slowlog-log-slower-than 10000

# 슬로우 로그 최대 엔트리 수
slowlog-max-len 128

# =======================
# 캐시 관련 최적화
# =======================
# 키 만료 알고리즘
# active: 백그라운드에서 만료된 키 적극적으로 삭제
# lazy: 키 접근 시에만 만료 확인
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# 키 공간 알림 (캐시 무효화에 유용)
# Ex: 만료된 키에 대한 이벤트 발생
notify-keyspace-events Ex

# =======================
# 특수 설정
# =======================
# 데이터베이스 개수
databases 16

# LUA 스크립트 타임아웃 (밀리초)
lua-time-limit 5000

# =======================
# 모니터링 설정
# =======================
# LATENCY 모니터링 임계값 (밀리초)
latency-monitor-threshold 100

# =======================
# 환경별 설정 오버라이드
# =======================

# 개발 환경용 추가 설정
# (REDIS_ENV=development 환경변수로 구분)

# 프로덕션 환경용 보안 강화
# requirepass your-strong-redis-password
# masterauth your-strong-redis-password

# =======================
# 주석 설명
# =======================

# 이 설정 파일은 다음 용도로 최적화되었습니다:
# 1. 웹 애플리케이션 세션 캐시
# 2. API 응답 캐시
# 3. 임시 데이터 저장
# 4. 실시간 통계 저장

# 주요 특징:
# - 메모리 효율성 중시 (LRU 정책)
# - 높은 가용성 (AOF 영속성)
# - 보안 강화 (위험 명령어 비활성화)
# - 성능 모니터링 지원

# 메모리 사용 패턴:
# - 최대 256MB 사용
# - 캐시 만료 시간: 5분-1시간
# - 주로 문자열과 해시 데이터 타입 사용

# 성능 특성:
# - 대부분의 작업이 1ms 이내 완료
# - 동시 연결 클라이언트: 최대 100개
# - 초당 수천 개의 요청 처리 가능

# 백업 및 복구:
# - AOF 파일을 통한 데이터 복구
# - appendonly.aof 파일 정기적 백업 권장
# - 장애 시 AOF 파일로 자동 복구

# 모니터링 포인트:
# - 메모리 사용량 (maxmemory 임계값)
# - 슬로우 쿼리 발생 빈도
# - 클라이언트 연결 수
# - 키 만료 및 제거 통계

# 튜닝 가이드:
# 1. 메모리 부족 시: maxmemory 증가 또는 만료 정책 조정
# 2. 응답 지연 시: 슬로우 로그 확인 후 쿼리 최적화
# 3. 연결 오류 시: maxclients 또는 timeout 조정
# 4. 데이터 유실 시: AOF 설정 확인 및 디스크 공간 확보
